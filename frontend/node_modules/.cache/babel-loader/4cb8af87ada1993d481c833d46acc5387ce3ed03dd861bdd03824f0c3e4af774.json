{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Bar = _resolveComponent(\"Bar\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_Bar, {\n    data: $options.chartData,\n    options: $options.chartOptions\n  }, null, 8 /* PROPS */, [\"data\", \"options\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_Bar","data","$options","chartData","options","chartOptions"],"sources":["/Users/achik/gatorbiome-full/GatorBiome/frontend/src/components/MicrobiomeChart.vue"],"sourcesContent":["<template>\n    <div>\n      <Bar :data=\"chartData\" :options=\"chartOptions\" />\n    </div>\n  </template>\n  \n  <script>\n  import {\n    Chart as ChartJS,\n    Title,\n    Tooltip,\n    Legend,\n    BarElement,\n    CategoryScale,\n    LinearScale\n  } from 'chart.js'\n  import { Bar } from 'vue-chartjs'\n  \n  ChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale)\n  \n  export default {\n    name: 'MicrobiomeChart',\n    components: { Bar },\n    props: {\n      inputData: {\n        type: Object,\n        required: true\n      }\n    },\n    computed: {\n      chartData() {\n        return {\n          labels: Object.keys(this.inputData),\n          datasets: [\n            {\n              label: 'Microbial Abundance',\n              backgroundColor: '#42a5f5',\n              data: Object.values(this.inputData)\n            }\n          ]\n        }\n      },\n      chartOptions() {\n        return {\n          responsive: true,\n          plugins: {\n            legend: { position: 'top' },\n            title: {\n              display: true,\n              text: 'Microbiome Composition'\n            }\n          }\n        }\n      }\n    }\n  }\n  </script>\n  "],"mappings":";;;uBACIA,mBAAA,CAEM,cADJC,YAAA,CAAiDC,cAAA;IAA3CC,IAAI,EAAEC,QAAA,CAAAC,SAAS;IAAGC,OAAO,EAAEF,QAAA,CAAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}